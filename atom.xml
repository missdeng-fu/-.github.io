<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>星余</title>
  
  
  <link href="https://www.imalun.com/atom.xml" rel="self"/>
  
  <link href="https://www.imalun.com/"/>
  <updated>2023-12-25T06:21:27.185Z</updated>
  <id>https://www.imalun.com/</id>
  
  <author>
    <name>日生</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>算法基础课</title>
    <link href="https://www.imalun.com/2023/12/25/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE(1)/"/>
    <id>https://www.imalun.com/2023/12/25/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE(1)/</id>
    <published>2023-12-25T06:21:20.008Z</published>
    <updated>2023-12-25T06:21:27.185Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础算法"><a href="#基础算法" class="headerlink" title="基础算法"></a>基础算法</h1><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><h3 id="快速排序模板"><a href="#快速排序模板" class="headerlink" title="快速排序模板"></a>快速排序模板</h3><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">100010</span>;<span class="hljs-type">int</span> q[N];<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">quick_sort</span><span class="hljs-params">(<span class="hljs-type">int</span> q[],<span class="hljs-type">int</span> l,<span class="hljs-type">int</span> r)</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-keyword">if</span>(l&gt;=r)  <span class="hljs-keyword">return</span>;    <span class="hljs-type">int</span> i=l<span class="hljs-number">-1</span>,j=r+<span class="hljs-number">1</span>, x=q[l+r&gt;&gt;<span class="hljs-number">1</span>];    <span class="hljs-keyword">while</span>(i&lt;j)    &#123;        <span class="hljs-keyword">do</span> i++; <span class="hljs-keyword">while</span>(q[i]&lt;x);        <span class="hljs-keyword">do</span> j--; <span class="hljs-keyword">while</span>(q[j]&gt;x);        <span class="hljs-keyword">if</span>(i&lt;j) <span class="hljs-built_in">swap</span>(q[i],q[j]);    &#125;    <span class="hljs-built_in">quick_sort</span>(q,l,j);    <span class="hljs-built_in">quick_sort</span>(q,j+<span class="hljs-number">1</span>,r);    &#125;<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-type">int</span> n;    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++) <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;q[i]);    <span class="hljs-built_in">quick_sort</span>(q,<span class="hljs-number">0</span>,n<span class="hljs-number">-1</span>);    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++) <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,q[i]);    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;    &#125;</code></pre><h3 id="归并排序模板"><a href="#归并排序模板" class="headerlink" title="归并排序模板"></a>归并排序模板</h3><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<span class="hljs-type">const</span> <span class="hljs-type">int</span> N=<span class="hljs-number">1000010</span>;<span class="hljs-type">int</span> q[N],temp[N];<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">merge_sort</span><span class="hljs-params">(<span class="hljs-type">int</span> q[], <span class="hljs-type">int</span> l, <span class="hljs-type">int</span> r)</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-comment">//递归的终止情况</span>    <span class="hljs-keyword">if</span>(l &gt;= r) <span class="hljs-keyword">return</span>;    <span class="hljs-comment">//第一步：分成子问题</span>    <span class="hljs-type">int</span> mid = l + r &gt;&gt; <span class="hljs-number">1</span>;    <span class="hljs-comment">//第二步：递归处理子问题</span>    <span class="hljs-built_in">merge_sort</span>(q, l, mid ), <span class="hljs-built_in">merge_sort</span>(q, mid + <span class="hljs-number">1</span>, r);    <span class="hljs-comment">//第三步：合并子问题</span>    <span class="hljs-type">int</span> k = <span class="hljs-number">0</span>, i = l, j = mid + <span class="hljs-number">1</span>, tmp[r - l + <span class="hljs-number">1</span>];    <span class="hljs-keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= r)        <span class="hljs-keyword">if</span>(q[i] &lt;= q[j]) tmp[k++] = q[i++];        <span class="hljs-keyword">else</span> tmp[k++] = q[j++];    <span class="hljs-keyword">while</span>(i &lt;= mid) tmp[k++] = q[i++];    <span class="hljs-keyword">while</span>(j &lt;= r) tmp[k++] = q[j++];    <span class="hljs-keyword">for</span>(k = <span class="hljs-number">0</span>, i = l; i &lt;= r; k++, i++) q[i] = tmp[k];&#125;<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-type">int</span> n;    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++) <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;q[i]);    <span class="hljs-built_in">merge_sort</span>(q,<span class="hljs-number">0</span>,n<span class="hljs-number">-1</span>);    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;n;j++) <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,q[j]);    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre><h3 id="二分模板"><a href="#二分模板" class="headerlink" title="二分模板"></a>二分模板</h3><pre><code class="hljs C++"><span class="hljs-comment">//写的 非常好的二分模板</span><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<span class="hljs-type">const</span> <span class="hljs-type">int</span> N=<span class="hljs-number">1e5</span>+<span class="hljs-number">5</span>;<span class="hljs-type">int</span> n,m,q[N];<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %d&quot;</span>,&amp;n,&amp;m);    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++) <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;q[i]);    <span class="hljs-keyword">while</span>(m--)    &#123;        <span class="hljs-type">int</span> k;<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;k);        <span class="hljs-comment">//寻找第一个等于K的坐标 我这边让二分的边界定为 左边为&lt;5 右边&gt;=5 则所求为r</span>        <span class="hljs-type">int</span> l=<span class="hljs-number">-1</span>,r=n;        <span class="hljs-keyword">while</span>(l+<span class="hljs-number">1</span>!=r)<span class="hljs-comment">//当l与r没有相接的时候,求边界</span>        &#123;            <span class="hljs-type">int</span> mid=l+r&gt;&gt;<span class="hljs-number">1</span>;            <span class="hljs-comment">//下面找第一个&gt;=5的坐标</span>            <span class="hljs-keyword">if</span>(q[mid]&gt;=k) r=mid;            <span class="hljs-keyword">else</span> l=mid;        &#125;        <span class="hljs-comment">//此时得到的r是第一个&gt;=5的坐标</span>        <span class="hljs-keyword">if</span>(q[r]!=k) <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;-1 -1\n&quot;</span>);        <span class="hljs-keyword">else</span>&#123;            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,r);                <span class="hljs-comment">//现在找最后一个&lt;=5的数字 我这边让二分的左边为&lt;=5 右边为&gt;5 则所求为ll</span>                <span class="hljs-type">int</span> ll=<span class="hljs-number">-1</span>,rr=n;                <span class="hljs-keyword">while</span>(ll+<span class="hljs-number">1</span>!=rr)                &#123;                                        <span class="hljs-type">int</span> mid=ll+rr&gt;&gt;<span class="hljs-number">1</span>;                    <span class="hljs-keyword">if</span>(q[mid]&lt;=k) ll=mid;                    <span class="hljs-keyword">else</span> rr=mid;                &#125;                <span class="hljs-keyword">if</span>(q[ll]!=k) <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,r);                <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,ll);            &#125;            &#125;    &#125;<span class="hljs-comment">//非常好的二分博客引用</span>https:<span class="hljs-comment">//blog.csdn.net/WJPnb1/article/details/126360962?spm=1001.2014.3001.5502</span></code></pre><h3 id="高精度"><a href="#高精度" class="headerlink" title="高精度"></a>高精度</h3><h4 id="高精度加法模板"><a href="#高精度加法模板" class="headerlink" title="高精度加法模板"></a>高精度加法模板</h4><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<span class="hljs-comment">//总结：</span><span class="hljs-comment">//第一步：字符串输入</span><span class="hljs-comment">//第二步：字符串转数字，逆序</span><span class="hljs-comment">//第三步：模板相加；</span><span class="hljs-comment">//第四步：逆序输出</span><span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">add</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt; &amp;A,vector&lt;<span class="hljs-type">int</span>&gt; &amp;B)</span></span><span class="hljs-function"></span>&#123;    vector&lt;<span class="hljs-type">int</span>&gt; C;    <span class="hljs-type">int</span> t=<span class="hljs-number">0</span>;    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;A.<span class="hljs-built_in">size</span>()||i&lt;B.<span class="hljs-built_in">size</span>();i++)    &#123;        <span class="hljs-keyword">if</span>(i&lt;A.<span class="hljs-built_in">size</span>()) t+=A[i];        <span class="hljs-keyword">if</span>(i&lt;B.<span class="hljs-built_in">size</span>()) t+=B[i];        C.<span class="hljs-built_in">push_back</span>(t%<span class="hljs-number">10</span>);        t/=<span class="hljs-number">10</span>;    &#125;    <span class="hljs-keyword">if</span>(t) C.<span class="hljs-built_in">push_back</span>(<span class="hljs-number">1</span>);    <span class="hljs-keyword">return</span> C;&#125;<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;    string a,b;    cin&gt;&gt;a&gt;&gt;b;<span class="hljs-comment">//123456</span>    vector&lt;<span class="hljs-type">int</span>&gt;A,B;    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=a.<span class="hljs-built_in">size</span>()<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--) A.<span class="hljs-built_in">push_back</span>(a[i]-<span class="hljs-string">&#x27;0&#x27;</span>);<span class="hljs-comment">//[6,5,4,3,2,1]</span>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=b.<span class="hljs-built_in">size</span>()<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--) B.<span class="hljs-built_in">push_back</span>(b[i]-<span class="hljs-string">&#x27;0&#x27;</span>);    <span class="hljs-keyword">auto</span> C=<span class="hljs-built_in">add</span>(A,B);    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=C.<span class="hljs-built_in">size</span>()<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--) <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,C[i]);    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre><h4 id="高精度减法模板"><a href="#高精度减法模板" class="headerlink" title="高精度减法模板"></a>高精度减法模板</h4><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<span class="hljs-comment">//第一步：输入</span><span class="hljs-comment">//第二步：比较</span><span class="hljs-comment">//第三步：相减：注意括号和前缀0要去掉</span><span class="hljs-comment">//第四步：输出</span><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp;A,vector&lt;<span class="hljs-type">int</span>&gt; &amp;B)</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-keyword">if</span>(A.<span class="hljs-built_in">size</span>()!=B.<span class="hljs-built_in">size</span>()) <span class="hljs-keyword">return</span> A.<span class="hljs-built_in">size</span>()&gt;B.<span class="hljs-built_in">size</span>();    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=A.<span class="hljs-built_in">size</span>()<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--)             <span class="hljs-keyword">if</span>(A[i]!=B[i]) <span class="hljs-keyword">return</span> A[i]&gt;B[i];    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;&#125;<span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">sub</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp;A,vector&lt;<span class="hljs-type">int</span>&gt;&amp;B)</span></span><span class="hljs-function"></span>&#123;    vector&lt;<span class="hljs-type">int</span>&gt;C;    <span class="hljs-type">int</span> t=<span class="hljs-number">0</span>;    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;A.<span class="hljs-built_in">size</span>();i++)    &#123;        <span class="hljs-keyword">if</span>(i&lt;A.<span class="hljs-built_in">size</span>()) t=A[i]-t;        <span class="hljs-keyword">if</span>(i&lt;B.<span class="hljs-built_in">size</span>()) t-=B[i];        C.<span class="hljs-built_in">push_back</span>((t+<span class="hljs-number">10</span>)%<span class="hljs-number">10</span>);<span class="hljs-comment">//虽然A比B大，但是A的某一位的数字可能比B小，所以这里加上10再模10</span>        <span class="hljs-keyword">if</span>(t&lt;<span class="hljs-number">0</span>) t=<span class="hljs-number">1</span>;<span class="hljs-comment">//用于给A去减掉</span>        <span class="hljs-keyword">else</span> t=<span class="hljs-number">0</span>;    &#125;    <span class="hljs-keyword">while</span>(C.<span class="hljs-built_in">size</span>()&gt;<span class="hljs-number">1</span>&amp;&amp;C.<span class="hljs-built_in">back</span>()==<span class="hljs-number">0</span>) C.<span class="hljs-built_in">pop_back</span>();    <span class="hljs-keyword">return</span> C;&#125;<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;    string a,b;    vector&lt;<span class="hljs-type">int</span>&gt; A,B;    cin&gt;&gt;a&gt;&gt;b;    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=a.<span class="hljs-built_in">size</span>()<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--) A.<span class="hljs-built_in">push_back</span>(a[i]-<span class="hljs-string">&#x27;0&#x27;</span>);    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=b.<span class="hljs-built_in">size</span>()<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--) B.<span class="hljs-built_in">push_back</span>(b[i]-<span class="hljs-string">&#x27;0&#x27;</span>);    vector&lt;<span class="hljs-type">int</span>&gt;C;    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">cmp</span>(A,B)) C=<span class="hljs-built_in">sub</span>(A,B);    <span class="hljs-keyword">else</span> C=<span class="hljs-built_in">sub</span>(B,A),cout &lt;&lt; <span class="hljs-string">&#x27;-&#x27;</span>;<span class="hljs-comment">//这里的负号是A-B=-(B-A)；</span>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=C.<span class="hljs-built_in">size</span>()<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--)  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,C[i]);    cout&lt;&lt;endl;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;    &#125;</code></pre><h4 id="高精度乘法模板"><a href="#高精度乘法模板" class="headerlink" title="高精度乘法模板"></a>高精度乘法模板</h4><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;algorithm&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">add</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt; A, vector&lt;<span class="hljs-type">int</span>&gt; B)</span> </span>&#123;    <span class="hljs-comment">// A: 4 3 2 1</span>    <span class="hljs-comment">// B: 6 5</span>    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">C</span><span class="hljs-params">(max(A.size(), B.size()) + <span class="hljs-number">7</span>, <span class="hljs-number">0</span>)</span></span>;  <span class="hljs-comment">// 数组C开大一点没事，反正可以去前导零的</span>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; A.<span class="hljs-built_in">size</span>(); i ++) C[i] += A[i];    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; B.<span class="hljs-built_in">size</span>(); i ++) C[i] += B[i];    <span class="hljs-comment">// 处理进位</span>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i + <span class="hljs-number">1</span> &lt; C.<span class="hljs-built_in">size</span>(); i ++) &#123;        C[i + <span class="hljs-number">1</span>] += C[i] / <span class="hljs-number">10</span>;        C[i] %= <span class="hljs-number">10</span>;    &#125;    <span class="hljs-comment">// 处理前导零</span>    <span class="hljs-keyword">while</span> (C.<span class="hljs-built_in">size</span>() &gt; <span class="hljs-number">1</span> &amp;&amp; C.<span class="hljs-built_in">back</span>() == <span class="hljs-number">0</span>) C.<span class="hljs-built_in">pop_back</span>();    <span class="hljs-built_in">reverse</span>(C.<span class="hljs-built_in">begin</span>(), C.<span class="hljs-built_in">end</span>());    <span class="hljs-keyword">return</span> C;&#125;<span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">mul</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt; A, vector&lt;<span class="hljs-type">int</span>&gt; B)</span> </span>&#123;    <span class="hljs-comment">// A: 4 3 2 1</span>    <span class="hljs-comment">// B: 6 5</span>    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">C</span><span class="hljs-params">(A.size() + B.size() + <span class="hljs-number">7</span>, <span class="hljs-number">0</span>)</span></span>;  <span class="hljs-comment">// 数组C开大一点没事，反正可以去前导零的</span>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; A.<span class="hljs-built_in">size</span>(); i ++) &#123;        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; B.<span class="hljs-built_in">size</span>(); j ++) &#123;            C[i + j] += A[i] * B[j];        &#125;    &#125;    <span class="hljs-comment">// 处理进位</span>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i + <span class="hljs-number">1</span> &lt; C.<span class="hljs-built_in">size</span>(); i ++) &#123;        C[i + <span class="hljs-number">1</span>] += C[i] / <span class="hljs-number">10</span>;        C[i] %= <span class="hljs-number">10</span>;    &#125;    <span class="hljs-comment">// 处理前导零 &quot;0000&quot; 去掉前导零</span>    <span class="hljs-keyword">while</span> (C.<span class="hljs-built_in">size</span>() &gt; <span class="hljs-number">1</span> &amp;&amp; C.<span class="hljs-built_in">back</span>() == <span class="hljs-number">0</span>) C.<span class="hljs-built_in">pop_back</span>();    <span class="hljs-built_in">reverse</span>(C.<span class="hljs-built_in">begin</span>(), C.<span class="hljs-built_in">end</span>());    <span class="hljs-keyword">return</span> C;&#125;<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;    string s1 = <span class="hljs-string">&quot;9899&quot;</span>, s2 = <span class="hljs-string">&quot;100&quot;</span>;    vector&lt;<span class="hljs-type">int</span>&gt; A, B;    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = s1.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i --) A.<span class="hljs-built_in">push_back</span>(s1[i] - <span class="hljs-string">&#x27;0&#x27;</span>);    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = s2.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i --) B.<span class="hljs-built_in">push_back</span>(s2[i] - <span class="hljs-string">&#x27;0&#x27;</span>);    vector&lt;<span class="hljs-type">int</span>&gt; C = <span class="hljs-built_in">add</span>(A, B);    cout &lt;&lt; s1 &lt;&lt; <span class="hljs-string">&quot;+&quot;</span> &lt;&lt; s2 &lt;&lt; <span class="hljs-string">&quot;=&quot;</span>;    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; C.<span class="hljs-built_in">size</span>(); i ++) cout &lt;&lt; C[i];    cout &lt;&lt; endl;    C = <span class="hljs-built_in">mul</span>(A, B);    cout &lt;&lt; s1 &lt;&lt; <span class="hljs-string">&quot;*&quot;</span> &lt;&lt; s2 &lt;&lt; <span class="hljs-string">&quot;=&quot;</span>;    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; C.<span class="hljs-built_in">size</span>(); i ++) cout &lt;&lt; C[i];    cout &lt;&lt; endl;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;链接：https:<span class="hljs-comment">//www.acwing.com/solution/content/13694/</span></code></pre><h4 id="高精度除法"><a href="#高精度除法" class="headerlink" title="高精度除法"></a>高精度除法</h4><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;vector&gt;</span></span><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;algorithm&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<span class="hljs-comment">//int r=0;</span><span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">div</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt; &amp;A,<span class="hljs-type">int</span> B,<span class="hljs-type">int</span> &amp;r)</span></span>&#123;<span class="hljs-comment">//r传入r的地址，便于直接对余数r进行修改</span>    vector&lt;<span class="hljs-type">int</span>&gt; C;    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;A.<span class="hljs-built_in">size</span>();i++)&#123;<span class="hljs-comment">//对A从最高位开始处理</span>        r=r*<span class="hljs-number">10</span>+A[i];<span class="hljs-comment">//将上次的余数*10在加上当前位的数字，便是该位需要除的被除数</span>        C.<span class="hljs-built_in">push_back</span>(r/B);<span class="hljs-comment">//所得即为商在这一位的数字</span>        r=r%B;<span class="hljs-comment">//这里的余数是一个等价关系，不懂可以看视频</span>    &#125;    <span class="hljs-comment">//由于在除法运算中，高位到低位运算，因此C的前导零都在vector的前面而不是尾部，vector只有删除最后一个数字pop_back是常数复杂度，而对于删除第一位没有相应的库函数可以使用，而且删除第一位，其余位也要前移，</span>    <span class="hljs-comment">//因此我们将C翻转，这样0就位于数组尾部，可以使用pop函数删除前导0</span>    <span class="hljs-built_in">reverse</span>(C.<span class="hljs-built_in">begin</span>(),C.<span class="hljs-built_in">end</span>());    <span class="hljs-keyword">while</span>(C.<span class="hljs-built_in">size</span>()&gt;<span class="hljs-number">1</span>&amp;&amp;C.<span class="hljs-built_in">back</span>()==<span class="hljs-number">0</span>) C.<span class="hljs-built_in">pop_back</span>();    <span class="hljs-keyword">return</span> C;&#125;<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;    string a;    <span class="hljs-type">int</span> B,r=<span class="hljs-number">0</span>; <span class="hljs-comment">//代表余数</span>    cin&gt;&gt;a&gt;&gt;B;    vector&lt;<span class="hljs-type">int</span>&gt; A;    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;a.<span class="hljs-built_in">size</span>();i++) A.<span class="hljs-built_in">push_back</span>(a[i]-<span class="hljs-string">&#x27;0&#x27;</span>);<span class="hljs-comment">//注意这次的A是由高为传输至低位，由于在除法的手算过程中，发现从高位进行处理</span>    <span class="hljs-comment">//for(int i=0;i&lt;A.size();i++) cout&lt;&lt;A[i];</span>    <span class="hljs-comment">//cout&lt;&lt;B;</span>    <span class="hljs-keyword">auto</span> C = <span class="hljs-built_in">div</span>(A,B,r);    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=C.<span class="hljs-built_in">size</span>()<span class="hljs-number">-1</span>;i&gt;=<span class="hljs-number">0</span>;i--) cout&lt;&lt;C[i];<span class="hljs-comment">//将C从最高位传给最低位</span>    cout&lt;&lt;endl&lt;&lt;r;<span class="hljs-comment">//输出余数</span>    cout&lt;&lt;endl;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre><h3 id="前缀和与差分"><a href="#前缀和与差分" class="headerlink" title="前缀和与差分"></a>前缀和与差分</h3><h4 id="前缀和"><a href="#前缀和" class="headerlink" title="前缀和"></a>前缀和</h4><pre><code class="hljs C++"><span class="hljs-comment">//前缀和的思想是存sum，然后相减进行计算</span><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstdio&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<span class="hljs-type">const</span> <span class="hljs-type">int</span> N=<span class="hljs-number">1e5</span>+<span class="hljs-number">10</span>;<span class="hljs-type">int</span> a[N],sum[N];<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-type">int</span> n,m,x;    cin&gt;&gt;n&gt;&gt;m;    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)    &#123;        cin&gt;&gt;x;        sum[i]=x+sum[i<span class="hljs-number">-1</span>];    &#125;    <span class="hljs-keyword">while</span>(m--)    &#123;        <span class="hljs-type">int</span> l,r;        cin&gt;&gt;l&gt;&gt;r;        cout&lt;&lt;sum[r]-sum[l<span class="hljs-number">-1</span>]&lt;&lt;endl;    &#125;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre><h4 id="一维差分模板"><a href="#一维差分模板" class="headerlink" title="一维差分模板"></a>一维差分模板</h4><pre><code class="hljs C++"><span class="hljs-comment">//差分非常高效的减少了运算关系的时间复杂度，二维差分的模板同样可以看y总给的那个矩阵</span><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">100010</span>;<span class="hljs-type">int</span> a[N],b[N];<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">insert</span><span class="hljs-params">(<span class="hljs-type">int</span> &amp;l,<span class="hljs-type">int</span> &amp;r,<span class="hljs-type">int</span> &amp;c)</span></span><span class="hljs-function"></span>&#123;    b[l]+=c;    b[r+<span class="hljs-number">1</span>]-=c;&#125;<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-type">int</span> n,m;    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i ++ ) <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;a[i]);    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i ++ ) <span class="hljs-built_in">insert</span>(i,i,a[i]);        <span class="hljs-keyword">while</span>(m--)    &#123;        <span class="hljs-type">int</span> l,r,c;        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d%d&quot;</span>, &amp;l, &amp;r,&amp;c);        <span class="hljs-built_in">insert</span>(l,r,c);    &#125;    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;=n; i ++ ) b[i]+=b[i<span class="hljs-number">-1</span>];    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;=n; i ++ ) <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,b[i]);    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre><h3 id="双指针算法"><a href="#双指针算法" class="headerlink" title="双指针算法"></a>双指针算法</h3><h4 id="最长连续不重复子序列"><a href="#最长连续不重复子序列" class="headerlink" title="最长连续不重复子序列"></a>最长连续不重复子序列</h4><pre><code class="hljs C++"><span class="hljs-comment">//其实这在后面好像是一道dp题目，双指针算法的核心就是用两个指针来解题</span><span class="hljs-meta"># <span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">100010</span>;<span class="hljs-type">int</span> a[N], s[N];<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-type">int</span> n, r = <span class="hljs-number">0</span>;    cin &gt;&gt; n;    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>, j = <span class="hljs-number">0</span>; i &lt; n; ++ i)    &#123;        cin &gt;&gt; a[i];        ++ s[a[i]];        <span class="hljs-keyword">while</span> (s[a[i]] &gt; <span class="hljs-number">1</span>) -- s[a[j++]]; <span class="hljs-comment">// 先减次数后右移</span>        r = <span class="hljs-built_in">max</span>(r, i - j + <span class="hljs-number">1</span>) ;    &#125;    cout &lt;&lt; r;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre><h3 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h3><pre><code class="hljs `C++">//这里主要是了解一个lowbit操作#include&lt;bits/stdc++.h&gt;using namespace std;int  lowbit(int &amp;x)//这个代码的关键是这个函数，每次输出x=的最后一位1;&#123;    return x&amp;-x;&#125;int main()&#123;    int n;    cin&gt;&gt;n;    while (n -- )    &#123;        int x;         cin &gt;&gt; x;        int res=0;        while(x&gt;0) x-=lowbit(x),res++;//每次减去x的最后一位1;直到没有1，那么res即为所求        cout &lt;&lt; res&lt;&lt;&quot; &quot;;    &#125;    &#125;</code></pre><h3 id="区间和"><a href="#区间和" class="headerlink" title="区间和"></a>区间和</h3><pre><code class="hljs C++"><span class="hljs-comment">//当空间稀疏性非常大的时候的做法，最后的实现也是前缀和，通过离散化，将空间的利用率降低了</span><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;algorithm&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">300010</span>; <span class="hljs-comment">//n次插入和m次查询相关数据量的上界</span><span class="hljs-type">int</span> n, m;<span class="hljs-type">int</span> a[N];<span class="hljs-comment">//存储坐标插入的值</span><span class="hljs-type">int</span> s[N];<span class="hljs-comment">//存储数组a的前缀和</span>vector&lt;<span class="hljs-type">int</span>&gt; alls;  <span class="hljs-comment">//存储（所有与插入和查询有关的）坐标</span>vector&lt;pair&lt;<span class="hljs-type">int</span>, <span class="hljs-type">int</span>&gt;&gt; add, query; <span class="hljs-comment">//存储插入和询问操作的数据</span><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">find</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span> </span>&#123; <span class="hljs-comment">//返回的是输入的坐标的离散化下标</span>    <span class="hljs-type">int</span> l = <span class="hljs-number">0</span>, r = alls.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>;    <span class="hljs-keyword">while</span> (l &lt; r) &#123;        <span class="hljs-type">int</span> mid = l + r &gt;&gt; <span class="hljs-number">1</span>;        <span class="hljs-keyword">if</span> (alls[mid] &gt;= x) r = mid;        <span class="hljs-keyword">else</span> l = mid + <span class="hljs-number">1</span>;    &#125;    <span class="hljs-keyword">return</span> r + <span class="hljs-number">1</span>;&#125;<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;        <span class="hljs-type">int</span> x, c;        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>, &amp;x, &amp;c);        add.<span class="hljs-built_in">push_back</span>(&#123;x, c&#125;);        alls.<span class="hljs-built_in">push_back</span>(x);    &#125;    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= m; i++) &#123;        <span class="hljs-type">int</span> l , r;        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>, &amp;l, &amp;r);        query.<span class="hljs-built_in">push_back</span>(&#123;l, r&#125;);        alls.<span class="hljs-built_in">push_back</span>(l);        alls.<span class="hljs-built_in">push_back</span>(r);    &#125;   <span class="hljs-comment">//排序，去重</span>    <span class="hljs-built_in">sort</span>(alls.<span class="hljs-built_in">begin</span>(), alls.<span class="hljs-built_in">end</span>());    alls.<span class="hljs-built_in">erase</span>(<span class="hljs-built_in">unique</span>(alls.<span class="hljs-built_in">begin</span>(), alls.<span class="hljs-built_in">end</span>()), alls.<span class="hljs-built_in">end</span>());    <span class="hljs-comment">//执行前n次插入操作</span>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> item : add) &#123;        <span class="hljs-type">int</span> x = <span class="hljs-built_in">find</span>(item.first);        a[x] += item.second;    &#125;    <span class="hljs-comment">//前缀和</span>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= alls.<span class="hljs-built_in">size</span>(); i++) s[i] = s[i<span class="hljs-number">-1</span>] + a[i];    <span class="hljs-comment">//处理后m次询问操作</span>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> item : query) &#123;        <span class="hljs-type">int</span> l = <span class="hljs-built_in">find</span>(item.first);        <span class="hljs-type">int</span> r = <span class="hljs-built_in">find</span>(item.second);        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, s[r] - s[l<span class="hljs-number">-1</span>]);    &#125;    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre><p>区间合并</p><pre><code class="hljs C++">这里看到一个区间合并，很绝的思路模板<span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;algorithm&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<span class="hljs-type">const</span> <span class="hljs-type">int</span> N=<span class="hljs-number">1e6</span>+<span class="hljs-number">10</span>;<span class="hljs-keyword">typedef</span> pair&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt; PII;PII a[N];<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-type">int</span> n;    cin&gt;&gt;n;    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;a[i].first,&amp;a[i].second);    <span class="hljs-built_in">sort</span>(a+<span class="hljs-number">1</span>,a+n+<span class="hljs-number">1</span>);<span class="hljs-comment">//sort对于二元组的排序规则是先考虑第一个元素，再考虑第二个元素</span>    <span class="hljs-type">int</span> ed=a[<span class="hljs-number">1</span>].second,ans=<span class="hljs-number">0</span>;    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=n;i++)    &#123;        <span class="hljs-keyword">if</span>(ed&gt;=a[i].first)ed=<span class="hljs-built_in">max</span>(ed,a[i].second);        <span class="hljs-keyword">else</span> ans++,ed=a[i].second;    &#125;    cout&lt;&lt;ans+<span class="hljs-number">1</span>&lt;&lt;endl;&#125;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;基础算法&quot;&gt;&lt;a href=&quot;#基础算法&quot; class=&quot;headerlink&quot; title=&quot;基础算法&quot;&gt;&lt;/a&gt;基础算法&lt;/h1&gt;&lt;h2 id=&quot;排序&quot;&gt;&lt;a href=&quot;#排序&quot; class=&quot;headerlink&quot; title=&quot;排序&quot;&gt;&lt;/a&gt;排序&lt;/h</summary>
      
    
    
    
    <category term="算法整理" scheme="https://www.imalun.com/categories/%E7%AE%97%E6%B3%95%E6%95%B4%E7%90%86/"/>
    
    
  </entry>
  
  <entry>
    <title>新思科技EDA软件开发要求</title>
    <link href="https://www.imalun.com/2023/12/18/%E5%B7%A5%E4%BD%9C%E5%B2%97%E4%BD%8D%E8%A6%81%E6%B1%82/"/>
    <id>https://www.imalun.com/2023/12/18/%E5%B7%A5%E4%BD%9C%E5%B2%97%E4%BD%8D%E8%A6%81%E6%B1%82/</id>
    <published>2023-12-18T15:35:44.841Z</published>
    <updated>2023-12-19T09:29:42.277Z</updated>
    
    <content type="html"><![CDATA[<p>这里他提到了多种语言，说明他对语言的要求是很高的，所以需要抓紧时间熟悉语言并熟练运用</p><p>招聘需求如下：<br>职位描述:</p><p>平台验证工程师负责验证业界领先的 SOC 实现工具和流程解决方案，如“ IC 编译器 II”、“设计编译器”、“形式化”和下一代数字平台“融合编译器”等。</p><p>理解客户的要求,<br>基于数字化设计流程验证新特性，包括高级节点下的新特性，5nm 和3nm 等。</p><p>验证 Synopsys 的前端/后端流，跟踪 Frontend/后端流 QOR/性能。</p><p>了解客户使用情况，提出新的要求，加强流程解决方案。</p><p>在佩尔、 TCL、 Python 或 C/c + + 中设计和开发测试程序，包括测试工具和自动化测试套件。</p><p>职位要求:</p><p>MS in EE, Microelectronics or relevant with three years’ experience（欢迎2021应届毕业生）</p><p>熟练掌握 ASIC 设计流程。包括平面图，综合，P &amp; R，STA 等。希望在很少的审查和指导下找到问题的经典解决方案</p><p>具有团队精神和良好的学习能力，对先进的技术和设计流程方法保持热情和兴趣！</p><p>具有良好的沟通能力和人际交往能力</p><p>具有良好的中英文口头和书面沟通能力</p><p>具有下列一个或多个 CS 领域的知识和经验者优先:</p><p>编程语言(C/C + + ，Shell，TCL，Perl，Python 等)</p><p>· Unix/Linux 操作系统</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这里他提到了多种语言，说明他对语言的要求是很高的，所以需要抓紧时间熟悉语言并熟练运用&lt;/p&gt;
&lt;p&gt;招聘需求如下：&lt;br&gt;职位描述:&lt;/p&gt;
&lt;p&gt;平台验证工程师负责验证业界领先的 SOC 实现工具和流程解决方案，如“ IC 编译器 II”、“设计编译器”、“形式化”和下一</summary>
      
    
    
    
    <category term="找工作" scheme="https://www.imalun.com/categories/%E6%89%BE%E5%B7%A5%E4%BD%9C/"/>
    
    
  </entry>
  
  <entry>
    <title>日记-11-20</title>
    <link href="https://www.imalun.com/2023/11/20/%E6%97%A5%E8%AE%B011-20/"/>
    <id>https://www.imalun.com/2023/11/20/%E6%97%A5%E8%AE%B011-20/</id>
    <published>2023-11-20T15:13:56.944Z</published>
    <updated>2023-11-20T15:14:12.223Z</updated>
    
    <content type="html"><![CDATA[<h2 id="随想"><a href="#随想" class="headerlink" title="随想"></a>随想</h2><p>应该很久没有写日记了，已经忘记上次写日记是哪天了，生活似乎并没有好过点，还是在不断的告诉自己熬过去熬过去中一天天度过，不知道生活什么时候才会有变化，也许我应该时常问自己，邓福星，你有慢慢的变成更好的自己的吗，不知道为什么，我想告诉自己，我确实好像似乎，在慢慢的变好，我的体重慢慢的下去，我慢慢的去护肤，慢慢的健身，慢慢的去体会生活，我想比起之前的一团糟，我觉得我确实有在慢慢变好，我还是有些时候免不了想陶俊余，我在想，是不是每当我脆弱的时候，我就会想有复合的念头，这样的念头是不正确的，也不该有的对吗，我应该习惯自己慢慢的面对这一切，就写到这里吧，得去忙着改代码了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;随想&quot;&gt;&lt;a href=&quot;#随想&quot; class=&quot;headerlink&quot; title=&quot;随想&quot;&gt;&lt;/a&gt;随想&lt;/h2&gt;&lt;p&gt;应该很久没有写日记了，已经忘记上次写日记是哪天了，生活似乎并没有好过点，还是在不断的告诉自己熬过去熬过去中一天天度过，不知道生活什么时候才会</summary>
      
    
    
    
    <category term="日记" scheme="https://www.imalun.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>关于时光朋友的反思</title>
    <link href="https://www.imalun.com/2023/10/22/%E9%9A%8F%E6%83%B310-22/"/>
    <id>https://www.imalun.com/2023/10/22/%E9%9A%8F%E6%83%B310-22/</id>
    <published>2023-10-22T14:56:55.787Z</published>
    <updated>2023-10-22T14:56:57.647Z</updated>
    
    <content type="html"><![CDATA[<p>今晚不知道为什么，对于朋友，有很多很多的感触，我觉得应该都要好好珍惜，人生在世，认识谁都特别不容易，我们要尊重并祝福每个人，每个身边人，少点戾气，多点包容和宽容，珍惜正在发生和将要发生的一起，邓福星，要脾气好点哦</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今晚不知道为什么，对于朋友，有很多很多的感触，我觉得应该都要好好珍惜，人生在世，认识谁都特别不容易，我们要尊重并祝福每个人，每个身边人，少点戾气，多点包容和宽容，珍惜正在发生和将要发生的一起，邓福星，要脾气好点哦&lt;/p&gt;
</summary>
      
    
    
    
    <category term="随笔" scheme="https://www.imalun.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>关于论文的反思</title>
    <link href="https://www.imalun.com/2023/10/19/%E9%9A%8F%E6%83%B310-19/"/>
    <id>https://www.imalun.com/2023/10/19/%E9%9A%8F%E6%83%B310-19/</id>
    <published>2023-10-19T10:14:20.456Z</published>
    <updated>2023-10-19T10:14:26.190Z</updated>
    
    <content type="html"><![CDATA[<p>时间过得真快，上一次写文章还是半个月之前了，今天写文章是因为一件事情，也就是跟随师姐们写论文的事情，这件事情让我有些困扰，今天吃饭的时候，一航问我，为什么最近李靖不找我了，其实我想，李靖不找我已经很久了，写这篇文章是想总结一下我心里的想法，就是，我希望李靖找我吗，如果她找了我，并且我认真且热情的回应了她，并且很沉浸进去的和她一起写论文，我想也许我能得到一个论文的二作，并且也许有可能接手李靖的课题，我想我此刻惋惜的也许也是这个，看着大家都有了不错的成绩，都有机会发论文带上名字，我想我心里是很羡慕的，又或者说，我嫉妒?，其实内心里有一点点涉及父母，我不知道我为什么会涉及到父母，也许发篇论文是一件很关键的事情。也许我希望他们的儿子有所成就，也许我心里也想不落后于别人，我想问邓福星，你很想要这个论文作者吗，我想答案是No,没有很想，只是不希望落后与别人，那我要去争取吗，我想我不想去争取，对我来说，这些事情，我看的并不是很重要，至少现在是这样的，我要为了将来的事情去提前做准备吗，为了将来读博的可能性去再争取一下吗，我想不是的，我不想去，是的，我不想去。也许李靖师姐已经很主动了，她对我应该有些失望，但是我不想，是的，我觉得我心力交瘁，我也不知道我追求什么，但我知道的是，我并不是很想再重新参与进去了，我衷心祝愿每个同门有个好结果，可我不应该去进行比较了，我只要过好自己的生活，过好自己的每一天就好了，以后的时间很长，我不去想以后的事，我也不关心别人的想法，我要照顾好我自己，好好的对待我自己，什么狗屁学术，什么狗屁追求，命定的一切终有安排，一切都是外物，把自己过好就可以了。把自己过好就可以了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;时间过得真快，上一次写文章还是半个月之前了，今天写文章是因为一件事情，也就是跟随师姐们写论文的事情，这件事情让我有些困扰，今天吃饭的时候，一航问我，为什么最近李靖不找我了，其实我想，李靖不找我已经很久了，写这篇文章是想总结一下我心里的想法，就是，我希望李靖找我吗，如果她找了</summary>
      
    
    
    
    <category term="随笔" scheme="https://www.imalun.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>日记-10-2</title>
    <link href="https://www.imalun.com/2023/10/02/%E6%97%A5%E8%AE%B010.2/"/>
    <id>https://www.imalun.com/2023/10/02/%E6%97%A5%E8%AE%B010.2/</id>
    <published>2023-10-02T04:49:46.243Z</published>
    <updated>2023-10-02T04:49:46.861Z</updated>
    
    <content type="html"><![CDATA[<h1 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h1><p>心里有一件比较不舒服的事情，想写下来，并且刨析我自己，今天是校庆70周年，学校是提供免费午餐的，之前是去登记过了，但是今天去吃饭的时候，阿姨问我有没有餐券我才想起来，我就说今天好多人在三食堂吃饭，于是这段饭我花了20多块，让我本就不富裕的生活学上加霜，我心里开始责怪戴闻浩，我责怪他没有通知我去哪里领餐券，并且为自己没有赚到学校的这个便宜而不开心，心中始终觉得不快，所以我决定对这件事情进行复盘</p><h2 id="复盘"><a href="#复盘" class="headerlink" title="复盘"></a>复盘</h2><p>  事件真的是戴闻浩的错吗，学校传达了通知他没有及时告知吗，又或者也许学校没有传达，我想我不该责怪，但我可以问一下，当然，只是询问而已，第二个，当时在阿姨问我有没有餐券的时候，我想我是可以当时去问餐券这个事情，但是我是吃饭的时候才想起来之前登记了免费的午餐，在付钱的时候，我的选择是不进行探究，付了这笔钱，我想是因为我发现我点的餐达到了21.5，所以我心里才不开心吧，所以这是我自己犯的错误，我有机会补救，但我没有，是我自己选择了付钱，不能把问题推到别人身上，也许，我是推卸自己的责任罢了，是的，一切事情都不能指望别人事事靠谱，也不能因为别人没有完善职责，而让自己心里不快，因为事件上什么事情都是可能发生的，愤怒不是合理的，甚至于他不该存在，又或者说，他不该轻易发生，刚闻浩回了微信，说是他这里还有餐券，我想这件事情他也有通知不到位的地方吧，嗯，我觉得这件事情，大部分都是他的问题，他没有履行到他的职责，因为学校方面把这件事情交给了班长。也就是说，即使我当时犹豫了，在付钱之前去问他餐券的事情，我也需要跑去主楼B410问他，对我来说，我可能宁愿花点钱买饭，毕竟也是我自己吃的，算不上冤枉钱。没有必要为这种事情责怪自己，或者感觉心里不痛快，人不患穷，患不均是这样的。人生值得关注的事情真的很少，要关注每一个瞬间，这件事情是一件很小的事情啦，需要修行的地方还很多，所以不要在为这种小事情困扰自己，错误已经造成，又或者说失误已经造成，就没有必要花很多时间去追求失误，去追究责任，尤其是，你没有足够的能力，结果只能是浪费时间而且内耗。但是你可以更清楚地认识一个人是什么样的，了解一个人的做事风格是什么样的，知道一个人靠不靠谱，这样将来可以避免更大的错误，做一个不评论的观察者，是一个很需要智慧的事情</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;事件&quot;&gt;&lt;a href=&quot;#事件&quot; class=&quot;headerlink&quot; title=&quot;事件&quot;&gt;&lt;/a&gt;事件&lt;/h1&gt;&lt;p&gt;心里有一件比较不舒服的事情，想写下来，并且刨析我自己，今天是校庆70周年，学校是提供免费午餐的，之前是去登记过了，但是今天去吃饭的时候，阿姨</summary>
      
    
    
    
    <category term="日记" scheme="https://www.imalun.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>日记-9-16</title>
    <link href="https://www.imalun.com/2023/09/16/%E6%97%A5%E8%AE%B09.16/"/>
    <id>https://www.imalun.com/2023/09/16/%E6%97%A5%E8%AE%B09.16/</id>
    <published>2023-09-16T14:40:02.856Z</published>
    <updated>2023-09-16T14:41:12.668Z</updated>
    
    <content type="html"><![CDATA[<p>最近很久没写日记了，也是因为最近在伤愈之中，只从小号被一句话不留的删掉之后，好不容易缝起来的自己，好像啪的一下又碎掉了，今天写日记主要是为了纪念一个小小的感动，也浅浅描述一下最近发生的事情</p><h2 id="感动"><a href="#感动" class="headerlink" title="感动"></a>感动</h2><p>因为上课的路途很远的问题，宿舍里只有我一个人是走路去，其实我觉得没什么，张津豪，我的室友，是一个很机灵也很善于打探消息的一个人，学校每年都会收捡毕业生遗留未带走的单车，然后收集起来，通过一个考试，按成绩排名，发放给学生，我的室友，他已经有一部单车了，他还专门去考试，它拿到了，而我排名落后没有拿到，结果今晚他说，明天领车了，要把那部车送给我，因为我没有车，唉，着实有点感动，挺谢谢的吧</p><h2 id="琐事"><a href="#琐事" class="headerlink" title="琐事"></a>琐事</h2><p>最近申请了贫困补助，是b类，就是家庭困难级别，不知道有没有钱，有多少钱</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近很久没写日记了，也是因为最近在伤愈之中，只从小号被一句话不留的删掉之后，好不容易缝起来的自己，好像啪的一下又碎掉了，今天写日记主要是为了纪念一个小小的感动，也浅浅描述一下最近发生的事情&lt;/p&gt;
&lt;h2 id=&quot;感动&quot;&gt;&lt;a href=&quot;#感动&quot; class=&quot;heade</summary>
      
    
    
    
    <category term="日记" scheme="https://www.imalun.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>告别语</title>
    <link href="https://www.imalun.com/2023/08/29/%E5%91%8A%E5%88%AB%E8%AF%AD/"/>
    <id>https://www.imalun.com/2023/08/29/%E5%91%8A%E5%88%AB%E8%AF%AD/</id>
    <published>2023-08-29T09:35:04.890Z</published>
    <updated>2023-08-29T09:35:24.198Z</updated>
    
    <content type="html"><![CDATA[<p>还是想好好告个别，源于我五年前听的两个小故事，我原封不动的搬回来</p><h1 id="故事一"><a href="#故事一" class="headerlink" title="故事一"></a>故事一</h1><p>大家晚上好，这里是就服秘书处深夜电台第三期，还是我杨杨。<br>时间好快，这一年对于一八级的孩子们而言，经历了太多太多。上半年的大家还在高中为高考而殚精竭虑，下半年迢迢而至来到雅西川农。或许，你们很多人只是之身而来，把太多太多留在了过去。今晚，杨杨给大家带来的是一个故事。虽不扣人心弦，但是值得我们每一个人去思考，去感受。这个故事的名字叫做《章台柳》。<br>唐朝玄宗皇帝年间，有一个才子叫作韩翊（yi第四声）。韩翊年少有才考中进士，回乡省亲时与同乡佳人柳氏结为连理，二人情投意合相爱至深。不久，韩翊走马上任，需要背井离乡去淄青节度使账下做官。路途遥远且官资尚浅，韩翊不便带上爱妻，只能让柳氏独守家中相约日后夫君锦衣归来。<br>可是，韩翊上任不久后，安史之乱爆发。叛军气势汹汹占领了大片城池，其中就包括韩翊的家乡。柳氏没能等到韩翊的归来，只能自己东躲西藏。因为柳氏姿容美艳而又没有丈夫在身边保护，乱世之中总被人骚扰。她怕自己的美艳惹祸哪天被人玷污，不能还韩翊玉洁之身，便剪断一头乌发，自毁容颜，躲避于僻静的山寺之中，晨钟暮鼓，只盼夫君韩翊早日到来。<br>后来，安史之乱平息。韩翊官升数级，进入朝堂。他派人回乡打听妻子柳氏的下落。这时的韩翊却生了鸡肠之心。他写了一封信给手下带回家乡寻柳氏。心里写道“章台柳，章台柳，昔日青青今在否？纵使长条似旧垂，亦应攀折他人手。”意思很明了，韩翊质问柳氏，你如此美貌又过了那么多年，肯定攀附别人去了。<br>手下带着这封信回到了韩翊故乡，找到了妻子柳氏。柳氏看完韩翊的信后心灰意冷，可怜自己为他做的一切。柳氏回信给韩翊，信里写道“杨柳枝，芳菲节。所很年年赠离别，一叶随风忽报秋，纵使君来不堪折。”意思别是，自己纵然是一颗婀娜的杨柳，但是如今也是秋过枯黄，即便是你回来也不愿再回顾这棵曾经的柳了。柳氏不诉说自己的委屈，只是对韩翊死心了。<br>可这封书信还没能送到韩翊手中。外番将军沙吒利路过韩翊家乡看到了柳氏，大为心动，便把柳氏抢占为己有。柳氏便这样被沙吒利带回了长安，沙吒利对柳氏还算好，柳氏也成了将军的宠妾。可这事传到了同样在长安的韩翊耳中，韩翊大为震惊。一天宴席中韩翊的好友发觉韩翊心事重重便询问他。韩翊把柳氏的事情告诉了好友，好友听后决心替韩翊抢回柳氏。于是立刻骑马跑到沙吒利府上，正好沙将军外出，他便以沙吒利遇害将死想见柳氏最后一眼为理由接到了柳氏，马上把柳氏带到韩翊府中。韩柳二人终得相逢，柳氏把这些年来自己的遭遇一一告诉了韩翊，韩翊自责不已。后来，韩翊在自己老上级的帮助下从沙吒利手中赎回来柳氏，一对苦命鸳鸯终得重逢。从此过上了幸福快乐的生活。<br>每个故事都有属于读者自己的领会，希望大家能在这个深夜静静地看完故事，日后不要负了你的章台柳。</p><h1 id="故事二"><a href="#故事二" class="headerlink" title="故事二"></a>故事二</h1><p>大概是五六年前，也是在川农，有一对师兄师姐，他们高中就是同学，后来不约而同地上了川农，可能是他乡遇故知的亲切感使然吧，他们大一就耍朋友了，这段情感绵绵到了大四，俩人都选择了考研互相鼓励，而且俩人成绩都不错，以前做了很多实践科研什么的，简直一对璧人。五六年前的那次考研结束后，可能是此间真情天也妒吧。师兄上了川大的研究生，师姐经过调剂又复试后没过，上不了研。可能是师姐家庭条件的原因她不能选择二战，于是师姐选择了回去家乡考公务员。此时二人许诺四年了，这段情不会因为三年的殊途而变故。毕业后的那个暑假他们一起去了西藏，看了圣洁的布达拉宫，一起走了文成公主曾经来过的路。<br>后来开学了，师兄去了川大。师姐回了他们的家乡备考公务员。每天都会相互问候，每周末师兄都会回家见面。这一年师姐考上了家乡的公务员，做了一个区政府的科员。研二以后师兄越来越忙，因为专业的需要师兄和导师去了云南西双版纳，师兄忙碌的科研生活无法再抽时间和师姐通讯交流。这时的师姐被家里人催婚了，因为师姐有稳定工作稳定收入，父母担心就是成家了。师姐告诉父母她和师兄有约，师兄毕业后他们才谈婚论嫁。尽管这时候师兄师姐已经大半年没好好联系了。<br>那一年师兄研三，在准备毕业了。那一年师姐结婚了，新郎是师姐区政府的同事，这三年来一直在单位体贴照顾师姐的一个好男人。<br>师兄川大硕士研究生毕业后没有再去找师姐也没有回家，而是去以色列进修了。曾经的一对璧人，五六年后，造物告诉他们，青春很美，因为那是一副画，也是一场梦。</p><p>但是现在的他们都很幸福，师兄在进步，师姐也有了好归属。就是这么看都觉得有点遗憾</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;还是想好好告个别，源于我五年前听的两个小故事，我原封不动的搬回来&lt;/p&gt;
&lt;h1 id=&quot;故事一&quot;&gt;&lt;a href=&quot;#故事一&quot; class=&quot;headerlink&quot; title=&quot;故事一&quot;&gt;&lt;/a&gt;故事一&lt;/h1&gt;&lt;p&gt;大家晚上好，这里是就服秘书处深夜电台第三期，还是我杨</summary>
      
    
    
    
    <category term="随笔" scheme="https://www.imalun.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>日记 8-27</title>
    <link href="https://www.imalun.com/2023/08/27/%E6%97%A5%E8%AE%B08-27/"/>
    <id>https://www.imalun.com/2023/08/27/%E6%97%A5%E8%AE%B08-27/</id>
    <published>2023-08-27T14:52:27.014Z</published>
    <updated>2023-08-27T14:52:43.694Z</updated>
    
    <content type="html"><![CDATA[<h1 id="情感"><a href="#情感" class="headerlink" title="情感"></a>情感</h1><p>今天想了一些乱七八糟的，不切实际的，大概就是陶俊余也想找我复合吧，但有什么迫不得已的原因，仔细想想，白日做梦罢了，总是有这些不切实际的幻想，对了，来学校一周了，每天的内裤和袜子都每天洗，虽然有什么很累，但还是爬起来洗了，好想告诉他，我正在慢慢的该这些坏习惯，也很久没说他妈的了，唉，可惜再也回不去了</p><h1 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h1><p>今天主打就是一个摆烂，什么也没做，难得没有什么事，休息了一天</p><h1 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h1><p>没什么反思，适当的摆烂是必要的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;情感&quot;&gt;&lt;a href=&quot;#情感&quot; class=&quot;headerlink&quot; title=&quot;情感&quot;&gt;&lt;/a&gt;情感&lt;/h1&gt;&lt;p&gt;今天想了一些乱七八糟的，不切实际的，大概就是陶俊余也想找我复合吧，但有什么迫不得已的原因，仔细想想，白日做梦罢了，总是有这些不切实际的幻想，</summary>
      
    
    
    
    <category term="日记" scheme="https://www.imalun.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>今日的一些思考-8-26</title>
    <link href="https://www.imalun.com/2023/08/26/%E6%97%A5%E8%AE%B08-26/"/>
    <id>https://www.imalun.com/2023/08/26/%E6%97%A5%E8%AE%B08-26/</id>
    <published>2023-08-26T15:07:33.801Z</published>
    <updated>2023-08-26T15:07:37.726Z</updated>
    
    <content type="html"><![CDATA[<h1 id="情感"><a href="#情感" class="headerlink" title="情感"></a>情感</h1><p>今天中午想到了一些事情，自己也感同深受了一番，觉得过去对陶俊余说过的很多话都带有指责逼问的意思，虽然那个时候我自己并没有意识到，或者意识到了，但是面对陶俊余的妥协和忍让，让我觉得这不是什么大不了的事情，一直没有重视这个问题，以至于长期以来甚至对她说的不要骂我，以及害怕我感到很不解，但是今天我终于懂了，因为我自己也经历了一番，觉得真的是一件很委屈很委屈的事情，一想到过去自己对陶俊余那么不好，情绪又崩溃了，一直哭一直哭，中午在路上的时候忍住眼泪没掉下来，回来宿舍之后，躺在床上忍不住的嚎啕大哭，把眼睛都哭肿了，现在哭的眼睛还疼，很想给她发消息说对不起什么的，但是我想现在好像正是秋招的关键时期，不要打扰她的比较好，我所能为她做的，最大的事情，大概就是不打扰她吧，真心希望她能找到一个好男人，不要再碰到我这种垃圾了，真心真心希望她幸福，其实我才是那个最自我的人</p><h1 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h1><p>今天戴闻浩的语气让我很不爽，以后跟这人少接触吧，戾气太重了，今天是摆烂的一天，什么事情也做不进去</p><h1 id="今日反思"><a href="#今日反思" class="headerlink" title="今日反思"></a>今日反思</h1><p>以后如果生气了想说什么话，一定不要说，要忍者，因为通常你生气的时候说出的话，事后你会觉得很后悔</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;情感&quot;&gt;&lt;a href=&quot;#情感&quot; class=&quot;headerlink&quot; title=&quot;情感&quot;&gt;&lt;/a&gt;情感&lt;/h1&gt;&lt;p&gt;今天中午想到了一些事情，自己也感同深受了一番，觉得过去对陶俊余说过的很多话都带有指责逼问的意思，虽然那个时候我自己并没有意识到，或者意识到了</summary>
      
    
    
    
    <category term="日记" scheme="https://www.imalun.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>今日的一些思考-8-25</title>
    <link href="https://www.imalun.com/2023/08/25/%E6%97%A5%E8%AE%B08-25/"/>
    <id>https://www.imalun.com/2023/08/25/%E6%97%A5%E8%AE%B08-25/</id>
    <published>2023-08-25T15:28:19.678Z</published>
    <updated>2023-08-25T15:28:25.625Z</updated>
    
    <content type="html"><![CDATA[<h1 id="情感"><a href="#情感" class="headerlink" title="情感"></a>情感</h1><p>今天发现原来今天才8月25号，20号给陶俊余发消息没有回复以后，每一天都过得很艰难也很漫长，让我以为时间已经过去了很久，原来也才5天，对于感情的想法是，也许我不值得拥有感情，也不该再去耽误别人，我想我是一个很差劲的人</p><h1 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h1><p>今天早上是开学典礼，开了一会我就走了，后来去了图书馆，因为暑假的作业一直没写，老师又一直催，所以去图书管写作业，但是那个代码对我来说太难了，今天一天把我头都给想大了，大脑实在是不能继续运转，下午四点多的时候，实在是精神不能再聚焦，于是我回宿舍，爬到床上，很快的睡了一个多小时，工科读研感觉真的挺难的，中午吃饭和师兄聊天，才知道原来就业形势并没有那么好，真正的了解到了什么是大饼，但是我本就一开始就没有选择，今后要抓紧自学，把时间都利用起来，我想三年，应该最后能找个还行的工作，一定要努力学习，把时间把握在自己的手中，睡完觉之后就去图书馆看了会代码，很快就写出来了，成功的原因在于下午睡觉之前和朋友交流了一下，所以说交流时很有必要的，向成功的人交流</p><h1 id="今日反思"><a href="#今日反思" class="headerlink" title="今日反思"></a>今日反思</h1><p>今天才又一次意识到应该抓紧时间自学，一丁点时间也不能再继续浪费了，为了找个好工作，不要再重蹈本科的覆辙了。收获在于知道了如果你很累，那就去休息，但不是玩手机，休息完之后也许一切就茅塞顿开了，最近博客上传照片总是失败，找个时间研究一下，最近太忙了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;情感&quot;&gt;&lt;a href=&quot;#情感&quot; class=&quot;headerlink&quot; title=&quot;情感&quot;&gt;&lt;/a&gt;情感&lt;/h1&gt;&lt;p&gt;今天发现原来今天才8月25号，20号给陶俊余发消息没有回复以后，每一天都过得很艰难也很漫长，让我以为时间已经过去了很久，原来也才5天，对于感</summary>
      
    
    
    
    <category term="日记" scheme="https://www.imalun.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>今日的一些思考-8-24</title>
    <link href="https://www.imalun.com/2023/08/24/%E6%97%A5%E8%AE%B08-24/"/>
    <id>https://www.imalun.com/2023/08/24/%E6%97%A5%E8%AE%B08-24/</id>
    <published>2023-08-24T14:46:05.674Z</published>
    <updated>2023-08-25T15:28:30.739Z</updated>
    
    <content type="html"><![CDATA[<h1 id="情感"><a href="#情感" class="headerlink" title="情感"></a>情感</h1><p>昨天没有写日记，其实昨天想写的东西还挺多的，那一会懒得开电脑了所以没有记录，今天把还记得得一起写下来，昨天导师让我们去城里参加一个会，risc-v中国区峰会。本来报名时间都过了，因为导师是汇报人员，也就是大佬，没报名也让我们去了，但其实大家是不想去得，峰会在北京香格里拉饭店，在城里，坐地铁要一个多小时，但是导师说要一起拍照合照，于是我们六点起床，我和另外四个同学打了一个六座得商务座去了北京，每人60，宿舍有一个叫段永强得，已经几天没回宿舍睡了，他的女朋友为了他。来昌平找工作了，他们在昌平租了个房子，我问了下价格800，说实话我很羡慕他们那个时候，但是我忘记了我羡慕得是啥了，但那一刻我心里满是陶俊余，这就是昨天得情感故事了，今天我突然想起，我和她第一次分手得时候，我问她还我2000块钱，还发短信骂她，这真的是一件非常过分得事情呀，可是我直到今天才意识到这件事情真的很过分，我想也许我才是一个自我的人，我沉浸在自我的世界和忙于保护自我，其实她早已被我伤害得体无完肤，我那样得过分，她还愿意和我复合，我想其实她是想和我走下去得，至少曾经是这样的，我时常害怕自己是唯一一个还困在原地得人，可我不得不去面对我心里得很多很多得放不下得事情和突然涌上得回忆，我还对她有诸多得欺骗和隐瞒，她以前说的没错，她确实是一个吸渣体制，谈的都是渣男，今天晚上坐在图书馆刷抖音得时候，刷到重庆火锅一度还落下泪来，觉得其实自己也受了好多委屈，去成都两个月其实也没吃啥好的，连自己很喜欢吃的烧烤一次都没去吃过，只在那个巷子门口那个烧烤摊吃过，最后一次想好好吃个烧烤，结果因为说错话，在大庭广众之下被吼，最后也没好好吃，其实觉得自己也受了挺多委屈得，到了成都疯狂得找工作，试工作，每天两个小时得通勤，其实也没过什么好日子，如果不是为了爱情，我在家里怎么需要受这样得苦，唉，现在回想起来觉得自己挺矫情得，和我分手是对的，分手之后，其实我一直陷入一种自我怀疑当中，觉得自己很差劲很差劲，现在想着确实很差劲很差劲，简直就是垃圾，毒瘤，离开我是对的，我这种人不值得留恋</p><h1 id="日记"><a href="#日记" class="headerlink" title="日记"></a>日记</h1><p>生活今天早上开研究生新生教育会，下去去实验室和师姐讨论课题，实验室太闷了，我实在呆不下去，转战到图书馆，今天一点学习得心情都没有，头晕呼呼得，不想动脑子，在图书馆一直刷抖音吃播，好像就是这么平平无奇得一天</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;情感&quot;&gt;&lt;a href=&quot;#情感&quot; class=&quot;headerlink&quot; title=&quot;情感&quot;&gt;&lt;/a&gt;情感&lt;/h1&gt;&lt;p&gt;昨天没有写日记，其实昨天想写的东西还挺多的，那一会懒得开电脑了所以没有记录，今天把还记得得一起写下来，昨天导师让我们去城里参加一个会，ris</summary>
      
    
    
    
    <category term="日记" scheme="https://www.imalun.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>今日的一些思考-8-20</title>
    <link href="https://www.imalun.com/2023/08/22/%E6%97%A5%E8%AE%B08-22/"/>
    <id>https://www.imalun.com/2023/08/22/%E6%97%A5%E8%AE%B08-22/</id>
    <published>2023-08-22T15:36:13.672Z</published>
    <updated>2023-08-22T15:36:14.253Z</updated>
    
    <content type="html"><![CDATA[<h1 id="情感"><a href="#情感" class="headerlink" title="情感"></a>情感</h1><p>今天是七夕，难得看见陶俊余的qq头像和背景换了，大意就是搞钱的意思吧，早上还是想起陶俊余，想起我对她做过的那些过分的事情，我想她一定受了很多委屈吧，我想道歉想弥补，可这些事情已经没有什么意义了，一切都没有意义了，她那一跪在我眼前，我想起内心就害怕，甚至不敢回想，可我不得不面对，那是我这一生都无法原谅自己的事情，还有她在门外敲门，回想起来，我怎么能做出这些事情呢，那些事情回想起来都不像我自己，可那就是我自己，虽然没没回想起来这些事情，已经没机会弥补，甚至即使有机会弥补，也可能只是越做越差，甚至带来更大的伤害，可我还是忍不住的回想，忍不住的想道歉。遇见我对她来说，是一种不幸吧，我怎么会是那样的一个人呢，也许我本身就是一个很坏的人吧，希望她能找到一个很好的人，不要再遇到我这种垃圾，我只会说这种话了</p><h1 id="日记"><a href="#日记" class="headerlink" title="日记"></a>日记</h1><p>今早醒来的时候已经七点多了，洗脸刷牙收拾后，去外面散步四公里，去图书馆的时候已经快接近十点了，十一点多的时候，师兄通知十二点开组会，开组会的时候，导师和师兄都带饭，边带边开，听说是刘院长从欧洲带来的习惯，我没吃饭，组会开了三个多小时，组会的时候，认识了禹承轩，得他帮助，终于搞定了饭卡和校园网的事情，能够顺利吃上饭和洗澡了，之前几天一直没吃饭，下午的时候照了新生采集照，去了图书馆，问了北京烤鸭得事情，晚上通知明天要去市里开RISC-V中国区峰会，真的6，坐地铁去，明早六点就得起床，晚上六点再回来，真的6，本来报名时间都过了，大老板发话，小老板特别关照，没报名也让我们去了，当锻炼身体了吧</p><h1 id="今日反思"><a href="#今日反思" class="headerlink" title="今日反思"></a>今日反思</h1><p>孔子曰，每天都要反省自己，我就从今天开始每天得日记加入这个板块，今天我觉得做的不好的地方有以下几点，一个是起床起太晚了，应该六点左右就要出门锻炼，第二个是，对拉我一起汇报得师姐过去热情了，也就是话太多，虽然也没说几句话，以后非工作问题不和她交流，也不主动给他发消息，第三点就是今天知道峰会居然是坐地铁得时候，我在群里得发言体现了我的无语，下次不该这样子，少说点话，少发点言，不要把自己得情绪立即表达出来，也许事后复盘会觉得其实不该这么做。这就是今天得复盘，希望自己能加以改正</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;情感&quot;&gt;&lt;a href=&quot;#情感&quot; class=&quot;headerlink&quot; title=&quot;情感&quot;&gt;&lt;/a&gt;情感&lt;/h1&gt;&lt;p&gt;今天是七夕，难得看见陶俊余的qq头像和背景换了，大意就是搞钱的意思吧，早上还是想起陶俊余，想起我对她做过的那些过分的事情，我想她一定受了很多</summary>
      
    
    
    
    <category term="日记" scheme="https://www.imalun.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>日记-8-21</title>
    <link href="https://www.imalun.com/2023/08/21/%E6%97%A5%E8%AE%B08.21/"/>
    <id>https://www.imalun.com/2023/08/21/%E6%97%A5%E8%AE%B08.21/</id>
    <published>2023-08-21T14:49:42.893Z</published>
    <updated>2023-08-21T14:49:50.183Z</updated>
    
    <content type="html"><![CDATA[<h1 id="情感"><a href="#情感" class="headerlink" title="情感"></a>情感</h1><p>今天早上去了图书馆看书，昨晚哭了很久眼睛有点疼，给陶俊余的消息迟迟没有回复，应该是不会回复我了，在图书馆学习的时候突然好怀念考研，好怀念川农，不知道是为什么，看电脑久了加上昨晚哭的眼睛疼，就抬头看向窗外，不知道为什么又想起了以后考研的时候，我坐陶俊余的侧面，看着她学累了抬头看窗的样子，无比的清晰，当时又好想好想她，其实我和她之间有过一段非常美好的回忆的，我后来在想，我这么喜欢她，为什么到最后对她有那么多职责和不满意呢，我看似乎生活中很多情侣都会这样，为什么会走到这一步呢，我当时的想法是，是什么我忘记了。</p><h1 id="日记"><a href="#日记" class="headerlink" title="日记"></a>日记</h1><p>今天实验室老板请我们吃饭，刘院长、金州老师和孙老师，定的是五点半，我走路过去的，本来想着提前两三分钟到，结果忘了考虑餐厅在七楼，坐电梯上去的时候，一层停一下一层停一下，结果最后我迟到了，进饭馆的时候那个小哥问我是几个人，有预约没，我以为吃饭就是那种进去找桌子，结果这家店只提供那中豪华大包间，包间里还有厕所那中，我推开包间大门，结果大家都做好了刘院长正在点菜，那一瞬间我怀疑自己是不是走错了，直到看到熟人，我快速的说着不好意思并找到一个空位置坐下来，坐下来的时候旁边是个女生，结果我缓过气抬头一看是金州老师，吓得我赶紧问好，老师说你是林福星，我说不是，我是邓福星，吃饭过程就不赘叙了，吃完饭和大家一起走回来的，有说有笑的，完事了好多人加我好友，因为我不主动加人家，大家还挺热情的，叫我好兄弟，那一刻突然就没那么想陶俊余了，晚上回宿舍前去图书馆收拾了东西，跑了步，本来想跑三公里，最后只跑了一公里多一点，每天都要坚持。要瘦下来，加油邓福星，最近感冒了，总流鼻涕，希望快点好</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;情感&quot;&gt;&lt;a href=&quot;#情感&quot; class=&quot;headerlink&quot; title=&quot;情感&quot;&gt;&lt;/a&gt;情感&lt;/h1&gt;&lt;p&gt;今天早上去了图书馆看书，昨晚哭了很久眼睛有点疼，给陶俊余的消息迟迟没有回复，应该是不会回复我了，在图书馆学习的时候突然好怀念考研，好怀念川农</summary>
      
    
    
    
    <category term="日记" scheme="https://www.imalun.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>今日的一些思考-8-20</title>
    <link href="https://www.imalun.com/2023/08/20/%E6%97%A5%E8%AE%B08-20/"/>
    <id>https://www.imalun.com/2023/08/20/%E6%97%A5%E8%AE%B08-20/</id>
    <published>2023-08-20T14:47:38.790Z</published>
    <updated>2023-08-20T14:47:44.026Z</updated>
    
    <content type="html"><![CDATA[<p>今天下午送爸妈回家了，我一个人待着北京这地方，初来一个生疏的地方真的很多地方都不习惯，也感到很陌生，在努力的适应当中，其实真的很不习惯，昨天没写日记，其实昨天心里好多委屈，我其实真的不想来这学校的，我一点都不想的，我想退学，可是做不到，家里这么多的期盼，我真的好后悔好后悔，我不该填那个调剂的，我不该来北京散心的，我好想陶俊余啊，留我一个人在这个破地方，而且恋爱感情也没了，我真的好不喜欢，好讨厌我自己，我当时就是听到师兄那个成都EDA，不然我真的不会来，分手以来，我失去了生活的动力，完完全全的失去了生活的动力，我不想努力，可能别人会给我找好多理由努力，可对我来说，只有我的小家庭值得我努力，我最近好废好废，一点精神也打不起来，我好想陶俊余，今天在这里，北方的澡堂真的是惊呆我了，我习惯不了，早知道应该选南京农业的，不知道为什么走到了今天这一步，真的好失败</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天下午送爸妈回家了，我一个人待着北京这地方，初来一个生疏的地方真的很多地方都不习惯，也感到很陌生，在努力的适应当中，其实真的很不习惯，昨天没写日记，其实昨天心里好多委屈，我其实真的不想来这学校的，我一点都不想的，我想退学，可是做不到，家里这么多的期盼，我真的好后悔好后悔，</summary>
      
    
    
    
    <category term="日记" scheme="https://www.imalun.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>日记 8-17</title>
    <link href="https://www.imalun.com/2023/08/18/%E4%BB%8A%E6%97%A5%E4%BB%BD%E6%80%9D%E8%80%83/"/>
    <id>https://www.imalun.com/2023/08/18/%E4%BB%8A%E6%97%A5%E4%BB%BD%E6%80%9D%E8%80%83/</id>
    <published>2023-08-18T01:12:26.060Z</published>
    <updated>2023-08-18T01:12:53.310Z</updated>
    
    <content type="html"><![CDATA[<p>现在是八月十八号早上，待会要去天坛，我在北京南站西铁营全季酒店，我在这里写下我最近一段时间的思考和领会。</p><p>最近一段时间我觉得我个人的情绪非常的浮躁，甚至很多时候都想要生气，我把我最近一些觉得愤怒的事情如实写在这里，并做自我刨析</p><p>这次和我爸妈来北京，我对爸爸产生过很多次生气的想法，在很多时候，他不跟我们一起，又或者说，他有一些显示个性但又不明显与组织冲突的事情，可我会为这些事情感到愤怒，主要是以下事项，我们在天安门看完升旗的时间是早上6点，之后十点才有毛主席纪念堂，在这个期间我们本来坐在一处，后来爸爸说他困了，就另外找了一个阴凉的地方去睡觉，后来打视频让我跟妈妈也过去，我想我生气是因为，我觉得爸爸没用听我的指挥，我想是这样的，我觉得她们什么都不懂，不该有自己的想法，因为老老实实的跟着我走，所以我会生气，我对妈妈说，说爸爸不服从组织，其实细细想来是爸爸的错吗，我想不是吧，是我太强势了，这在后来的一件事中体现的更明显了，我想起尝试看看毛主席纪念堂可不可以提前进，结果核验身份的时候说不可以，爸爸说他想溜进去，虽然工作人员对他说不可以，我对他对我说想溜进去感到愤怒，觉得他爱刷小聪明，对他的生气更胜了，对他眼神和态度很不好的说，不行，出来，最后他低着头出来，后来我们纪念堂存了包，这里解释下，毛纪念堂是不可以带包的，我妈妈的小包没存，我们存了包，爸爸说，刚才我们走的时候，一转身他就听到工作人员说十点的可以检票了，我虽然怀疑，但也许去试一试，过马路的时候我对他说，请你守规矩点，语气很不好，我爸看着我也有点生气说，我哪里不守规矩了，那一刻他看着我的时候，我就想起了陶俊余，想起来我们走的那天，我对陶俊余说，你还敢忤逆我，她对我说，我就忤逆了，多么似曾相识的一幕，那一刻我恍惚了，我陷入了深思中，我想我是强势的，我希望别人都听我的话，如果以我为主导的话，我太强势了，这导致了，其实爸爸的行为并没有很大的错，陶俊余以前也没用做什么很过分的事情，我依旧愤怒而且无法容忍，我想是我的问题，我觉得我这个方面需要改变，不能这样，我应该反省我自身，并且做出改变。</p><p>昨天很想很想陶俊余，很想联系她，不是想复合，就是很想联系她，还好忍住了，差点没忍住，文字都打到聊天框了，我们不同路了，早上起来的时候庆幸没打扰</p><p>来天安门的时候，好想和她一起来，和她一起牵手逛，可惜没机会了，我们不同路了，我应该让她安静做事</p><p>最近思考是很多的，也看了两本书，但因为不想碰电脑，一直没传上去，以后有感悟要及时传，免得想法丢失。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;现在是八月十八号早上，待会要去天坛，我在北京南站西铁营全季酒店，我在这里写下我最近一段时间的思考和领会。&lt;/p&gt;
&lt;p&gt;最近一段时间我觉得我个人的情绪非常的浮躁，甚至很多时候都想要生气，我把我最近一些觉得愤怒的事情如实写在这里，并做自我刨析&lt;/p&gt;
&lt;p&gt;这次和我爸妈来北京</summary>
      
    
    
    
    <category term="日记" scheme="https://www.imalun.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>难受-邓福星一定要瘦下去好吗，求求你了</title>
    <link href="https://www.imalun.com/2023/08/08/%E9%9A%BE%E5%8F%97/"/>
    <id>https://www.imalun.com/2023/08/08/%E9%9A%BE%E5%8F%97/</id>
    <published>2023-08-08T03:03:40.827Z</published>
    <updated>2023-08-08T03:03:41.325Z</updated>
    
    <content type="html"><![CDATA[<p>今天是八月八号，是秋至了，十点的时候来了奶奶家，最近应该是胖了，我测体重的时候是155，比起我去成都之前又胖了五斤，我爸看到我第一句话就是，180斤了？后来我吃饭的时候，他又笑着看着我说我长成了猛将了，我听到这话心里真的很难受，我前两天已经开始决定控制体重了，我也不喜欢当一个胖子，完了奶奶又说我长的像猪一样，说的我真的很难受，我一个人收拾起书包上楼来了，想起来又很没出息的在这里哭，我也不知道我为什么哭，我不想别人说我胖，虽然这是真的，可是说的我心里跟刀割一样，之前回湖南前，二姑在抖音上问妈妈，问我瘦了没，唉，难受，也许陶俊余也嫌我胖吧，胖的丑的不温柔的我，确实应该被抛弃，不知道为什么这么难受，真的好难受，我用手机给自己照了好多张照片，看看自己究竟胖成什么样子了，又想起以前陶俊余说，这辈子没机会看到邓福星瘦的模样了，这两年真的一事无成，恋爱最后也失败了，体重也剧增，什么什么都不如意，像个废物一样，邓福星，争口气，瘦下去好吗，答应我求求你，瘦下去好吗，求求你了，不知道为什么，这么难受的时候，好想好想陶俊余，想跟她说，我又受委屈，写到这里，又哭的好厉害，真的过的挺失败的，邓福星，慢慢照顾好自己，回不去了，也没机会给陶俊余送秋天第一杯奶茶了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天是八月八号，是秋至了，十点的时候来了奶奶家，最近应该是胖了，我测体重的时候是155，比起我去成都之前又胖了五斤，我爸看到我第一句话就是，180斤了？后来我吃饭的时候，他又笑着看着我说我长成了猛将了，我听到这话心里真的很难受，我前两天已经开始决定控制体重了，我也不喜欢当一</summary>
      
    
    
    
    <category term="随笔" scheme="https://www.imalun.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>快碎掉了</title>
    <link href="https://www.imalun.com/2023/08/01/%E9%9A%8F%E6%83%B38.1/"/>
    <id>https://www.imalun.com/2023/08/01/%E9%9A%8F%E6%83%B38.1/</id>
    <published>2023-07-31T16:51:23.035Z</published>
    <updated>2023-07-31T16:51:29.579Z</updated>
    
    <content type="html"><![CDATA[<p>最近真的真的快要碎掉了，刚才在床上痛哭的时候，又想去找陶俊余了，因为我遍及四周，我想她会懂我，做到电脑前才想起，其实陶俊余并不关心我的情绪，我的情绪对她来说是负担，她大概率会说，关他什么事吧，我的情绪怎样，跟陶俊余会有什么关系呢，她不会关心我的，复试失败的时候她想的尽快逃离我，辛亏刚没找她，不然又小丑了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近真的真的快要碎掉了，刚才在床上痛哭的时候，又想去找陶俊余了，因为我遍及四周，我想她会懂我，做到电脑前才想起，其实陶俊余并不关心我的情绪，我的情绪对她来说是负担，她大概率会说，关他什么事吧，我的情绪怎样，跟陶俊余会有什么关系呢，她不会关心我的，复试失败的时候她想的尽快逃离</summary>
      
    
    
    
    <category term="日记" scheme="https://www.imalun.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>写给俊余的信</title>
    <link href="https://www.imalun.com/2023/07/31/%E9%9A%8F%E6%83%B3/"/>
    <id>https://www.imalun.com/2023/07/31/%E9%9A%8F%E6%83%B3/</id>
    <published>2023-07-30T23:00:40.872Z</published>
    <updated>2023-07-30T23:01:21.100Z</updated>
    
    <content type="html"><![CDATA[<p>见字如面俊余，一晃我们已经一个月零九天没有联系了，不知道你最近还好吗，我想你一定会好好照顾自己的，俊余，说实话，我后悔遇见了你，不是后悔我损失了什么，又或者我承受了什么伤害，我后悔的是，我遇上了你，追求了你，给你这两年的生涯带来了沉重的打击，给你增添了许多的痛苦，我们是2022年2月7日正式确立关系，与2023年6月21日正式结束了我们的关系，给你持续带来了一年零五个月的痛苦，我是不成熟的，幼稚的，极端的，我总以为我的驰骋之心价值万金，其实这玩意一点都不值钱，在我们第一次分手的时候，我就不该纠缠的，在那期间，我给你带来了数不胜数的痛苦，俊余，我不够了解你，今天我必须这样承认，回头望去，你比我成熟的多得多的多，在这段感情中，我烦的最严重的错误，就是我没有给到你足够的安全感，俊余，过去的事情，我不愿再提了，我想你现在一定开始了很美好的新生活，这封信，我今天在这里写，也许你一生都不会知道，也不会看见，俊余，我想对你说，对不起，我的自作聪明，自以为是害了你，没有我这个垃圾的存在，我想你未来的生活里，一定可以过的很好，很完美，衷心祝愿你找到一个很好的男孩子，他已经学会了如何去爱，他成熟而且体贴，我非常非常希望有人能替我治愈我所给你带来的伤害，祝你一定一定幸福，罪者邓福星为你祈祷<br>                              2023年，7月31日，早上七点</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;见字如面俊余，一晃我们已经一个月零九天没有联系了，不知道你最近还好吗，我想你一定会好好照顾自己的，俊余，说实话，我后悔遇见了你，不是后悔我损失了什么，又或者我承受了什么伤害，我后悔的是，我遇上了你，追求了你，给你这两年的生涯带来了沉重的打击，给你增添了许多的痛苦，我们是20</summary>
      
    
    
    
    <category term="随笔" scheme="https://www.imalun.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>随笔 7-30</title>
    <link href="https://www.imalun.com/2023/07/30/%E6%80%9D%E8%80%83/"/>
    <id>https://www.imalun.com/2023/07/30/%E6%80%9D%E8%80%83/</id>
    <published>2023-07-30T06:37:17.723Z</published>
    <updated>2023-07-30T06:39:46.575Z</updated>
    
    <content type="html"><![CDATA[<p>我今天意识到，我真的很爱生气，很容易生气，我过去很多年来似乎认为，生气才是有性格，生气才能体现一个人是有立场的，可我现在这是不对的，这样的生气，让我的家庭，我的恋爱，承受了许多负担，也让我自己经受了很多不该加给自己的委屈，不该生气了，生活的很多事情，其实不必在意，不必生气，身边人的唠叨不必在意，听听就过去了，生活的道理总是在事情过去了就懂了，不要发脾气，不要说脏话，邓福星，加油做到好吗，永远记住好吗，做一个忠于自己的，平和的，不要求他人的人，这才是你所追求的不是吗，回到出发的路吧，做一个平和的自己</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我今天意识到，我真的很爱生气，很容易生气，我过去很多年来似乎认为，生气才是有性格，生气才能体现一个人是有立场的，可我现在这是不对的，这样的生气，让我的家庭，我的恋爱，承受了许多负担，也让我自己经受了很多不该加给自己的委屈，不该生气了，生活的很多事情，其实不必在意，不必生气，</summary>
      
    
    
    
    <category term="随笔" scheme="https://www.imalun.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
</feed>
